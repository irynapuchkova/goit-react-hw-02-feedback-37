{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["SectionSet","styled","section","Head","h1","Section","title","children","FeedbackPointsSet","ul","TotalPoints","p","FeedbackPointsUnit","li","FeedbackPoints","FeedbackPointsValue","span","PositivePotion","Statistics","feedbackStatistics","total","positivePercentage","map","key","value","ButtonSet","div","Button","button","FeedbackOptions","options","onLeaveFeedback","option","type","onClick","NotificationText","Notification","message","App","state","good","neutral","bad","onButtonClick","e","reaction","currentTarget","innerText","toLowerCase","Object","keys","find","setState","prevState","countTotalFeedback","values","reduce","acc","countPositiveFeedbackPercentage","Number","parseInt","statistics","entries","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEaA,EAAaC,IAAOC,QAAV,6GAOVC,EAAOF,IAAOG,GAAV,6K,OCNF,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACP,EAAD,WACGM,GAAS,cAACH,EAAD,UAAOG,IAChBC,K,4BCLMC,EAAoBP,IAAOQ,GAAV,iEAMjBC,EAAcT,IAAOU,EAAV,qKAUXC,EAAqBX,IAAOY,GAAV,4JAUlBC,EAAiBb,IAAOU,EAAV,0GAQdI,EAAsBd,IAAOe,KAAV,0GAQnBC,EAAiBhB,IAAOU,EAAV,qKCjCZ,SAASO,EAAT,GAIX,IAHFC,EAGC,EAHDA,mBACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,eAACb,EAAD,WACGW,EAAmBG,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YACtB,eAACZ,EAAD,WACE,eAACE,EAAD,WAAiBS,EAAjB,OACA,cAACR,EAAD,UAAsBS,MAFCD,MAK3B,eAACb,EAAD,qBACS,+BAAOU,OAEhB,eAACH,EAAD,iCAEE,iCAAOI,GAAsBA,EAA7B,cC3BD,I,EAAMI,EAAYxB,IAAOyB,IAAV,6FAMTC,EAAS1B,IAAO2B,OAAV,6eCLJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,cAACN,EAAD,UACGK,EAAQR,KAAI,SAAAU,GAAM,OACjB,cAACL,EAAD,CAAqBM,KAAK,SAASC,QAASH,EAA5C,SACGC,GADUA,QCLd,IAAMG,EAAmBlC,IAAOU,EAAV,kICCd,SAASyB,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,cAACF,EAAD,CAAkBF,KAAK,OAAvB,SAA+BI,I,ICInBC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,cAAgB,SAAAC,GACd,IAAIC,EAAWD,EAAEE,cAAcC,UAAUC,cAC5BC,OAAOC,KAAK,EAAKX,OACNY,MAAK,SAAA5B,GAAG,OAAIA,IAAQsB,MAG1C,EAAKO,UAAS,SAAAC,GAAS,sBAAQR,EAAWQ,EAAUR,GAAY,O,EAIpES,mBAAqB,WACnB,OAAOL,OAAOM,OAAO,EAAKhB,OAAOiB,QAAO,SAACC,EAAKjC,GAAN,OAAgBiC,EAAMjC,IAAO,I,EAGvEkC,gCAAkC,WAChC,IAAQlB,EAAS,EAAKD,MAAdC,KAIR,OAH2BmB,OAAOC,SACxB,IAAPpB,EAAc,EAAKc,uB,4CAKxB,WACE,IAAMO,EAAaZ,OAAOa,QAAQC,KAAKxB,OACjCT,EAAUmB,OAAOC,KAAKa,KAAKxB,OAC3BnB,EAAQ2C,KAAKT,qBACbjC,EAAqB0C,KAAKL,gCAAgCtC,GAEhE,OACE,qCACE,cAACf,EAAD,CAASC,MAAM,2BAAf,SACE,cAACuB,EAAD,CACEC,QAASA,EACTC,gBAAiBgC,KAAKpB,kBAI1B,eAACtC,EAAD,CAASC,MAAM,aAAf,UACa,IAAVc,GAAe,cAACgB,EAAD,CAAcC,QAAQ,4BACrCjB,EAAQ,GACP,cAACF,EAAD,CACEC,mBAAoB0C,EACpBzC,MAAOA,EACPC,mBAAoBA,c,GAlDD2C,a,YCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2a104259.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionSet = styled.section`\n  margin: auto;\n  padding: 26px;\n  height: 100%;\n  background-color: bisque;\n`;\n\nexport const Head = styled.h1`\n  background: #43d1af;\n  padding: 20px 0;\n  font-size: 140%;\n  font-weight: 300;\n  text-align: center;\n  color: #fff;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionSet, Head } from './Section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <SectionSet>\n      {title && <Head>{title}</Head>}\n      {children}\n    </SectionSet>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const FeedbackPointsSet = styled.ul`\n  display: flex;\n\n  height: 50px;\n`;\n\nexport const TotalPoints = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0;\n\n  width: 180px;\n`;\n\nexport const FeedbackPointsUnit = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin: 0;\n  padding: 0;\n\n  width: 180px;\n`;\n\nexport const FeedbackPoints = styled.p`\n  display: flex;\n  justify-content: center;\n  margin: 0;\n\n  width: 100%;\n`;\n\nexport const FeedbackPointsValue = styled.span`\n  display: flex;\n  justify-content: center;\n  margin: 0;\n\n  width: 100%;\n`;\n\nexport const PositivePotion = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0;\n\n  width: 180px;\n`;\n","import PropTypes from 'prop-types';\nimport { arrayOf } from 'prop-types';\nimport {\n  FeedbackPointsSet,\n  TotalPoints,\n  FeedbackPointsUnit,\n  FeedbackPoints,\n  FeedbackPointsValue,\n  PositivePotion,\n} from './Statistics.styled';\n\nexport default function Statistics({\n  feedbackStatistics,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <FeedbackPointsSet>\n      {feedbackStatistics.map(([key, value]) => (\n        <FeedbackPointsUnit key={key}>\n          <FeedbackPoints>{key}:</FeedbackPoints>\n          <FeedbackPointsValue>{value}</FeedbackPointsValue>\n        </FeedbackPointsUnit>\n      ))}\n      <TotalPoints>\n        total: <span>{total}</span>\n      </TotalPoints>\n      <PositivePotion>\n        positive feedback :\n        <span>{positivePercentage && positivePercentage} %</span>\n      </PositivePotion>\n    </FeedbackPointsSet>\n  );\n}\n\nStatistics.propTypes = {\n  statistics: PropTypes.arrayOf(\n    arrayOf({\n      key: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }),\n  ),\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ButtonSet = styled.div`\n  padding: 20px 40px;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Button = styled.button`\n  height: 50px;\n  width: 100px;\n\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 3%;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 16px;\n  font-weight: 600;\n  background: #188d8d;\n  color: #fff;\n  border-bottom: 2px solid #30c29e;\n  border-top-style: none;\n  border-right-style: none;\n  border-left-style: none;\n  cursor: pointer;\n  \n  &:hover {\n    background: #2ebc99;\n`;\n","import PropTypes from 'prop-types';\nimport { Button, ButtonSet } from './FeedbackOptions.styled';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ButtonSet>\n      {options.map(option => (\n        <Button key={option} type=\"button\" onClick={onLeaveFeedback}>\n          {option}\n        </Button>\n      ))}\n    </ButtonSet>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.node,\n  onLeaveFeedback: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const NotificationText = styled.p`\n  display: flex;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 24px;\n  color: red;\n`;\n","import PropTypes from 'prop-types';\nimport { NotificationText } from './Notification.styled';\n\nexport default function Notification({ message }) {\n  return <NotificationText type=\"text\">{message}</NotificationText>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React from 'react';\nimport { Component } from 'react';\n\nimport Section from 'components/Section';\nimport Statistics from 'components/Statistics';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Notification from 'components/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onButtonClick = e => {\n    let reaction = e.currentTarget.innerText.toLowerCase();\n    const keys = Object.keys(this.state);\n    const isReaction = keys.find(key => key === reaction);\n\n    if (isReaction) {\n      this.setState(prevState => ({ [reaction]: prevState[reaction] + 1 }));\n    }\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const positivePercentage = Number.parseInt(\n      (good * 100) / this.countTotalFeedback(),\n    );\n    return positivePercentage;\n  };\n\n  render() {\n    const statistics = Object.entries(this.state);\n    const options = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(total);\n\n    return (\n      <>\n        <Section title=\"Please )) Leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onButtonClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total === 0 && <Notification message=\"There is no feedback ((\" />}\n          {total > 0 && (\n            <Statistics\n              feedbackStatistics={statistics}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\nimport 'modern-normalize';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}